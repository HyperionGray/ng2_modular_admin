/*
 * Background image mixin.
 */

@mixin ma-bg-cover() {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

/*
 * Button mixin.
 *
 * This is adapted from Bootstrap to work with CSS custom properties.
 * Namely, we need to avoid lighten() and darken().
 */
@mixin ma-button($paletteName, $textColor) {
  color: $textColor;
  background-color: var(--ma-#{$paletteName}-color);
  border-color: transparent;

  &:hover {
    background-color: var(--ma-#{$paletteName}-color-dark);
  }

  &:active {
    background-color: var(--ma-#{$paletteName}-color-darker);
  }

  &.outline {
    color: var(--ma-#{$paletteName}-color-dark);
    border: 1px solid var(--ma-#{$paletteName}-color-dark);
    border-color: var(--ma-#{$paletteName}-color-dark);
    background-color: transparent;

    &:hover {
      color: $textColor;
      border-color: var(--ma-#{$paletteName}-color);
      background-color: var(--ma-#{$paletteName}-color);
    }

    &:active {
      color: $textColor;
      border-color: var(--ma-#{$paletteName}-color-darker);
      background-color: var(--ma-#{$paletteName}-color-darker);
    }
  }
}

/*
 * Create CSS custom properties for various shades of a base color.
 */
@mixin ma-color-palette($paletteName, $baseColor) {
  --ma-#{$paletteName}-color-lighter: lighten($baseColor, 16%);
  --ma-#{$paletteName}-color-light: lighten($baseColor, 10%);
  --ma-#{$paletteName}-color: $baseColor;
  --ma-#{$paletteName}-color-dark: darken($baseColor, 10%);
  --ma-#{$paletteName}-color-darker: darken($baseColor, 16%);
}
